version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: agrizen-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: agrigrow
      MYSQL_USER: agrizen_user
      MYSQL_PASSWORD: agrizen_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - agrizen-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Spring Boot Backend
  backend:
    build:
      context: ./project backend/backend
      dockerfile: Dockerfile
    container_name: agrizen-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/agrigrow
      SPRING_DATASOURCE_USERNAME: agrizen_user
      SPRING_DATASOURCE_PASSWORD: agrizen_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: false
      SPRING_JPA_HIBERNATE_DIALECT: org.hibernate.dialect.MySQLDialect
      SPRING_PROFILES_ACTIVE: docker
      APP_UPLOAD_DIR: /app/uploads
      APP_UPLOAD_BASE_URL: /uploads
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - agrizen-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mysql_data:
    driver: local
  uploads_data:
    driver: local

networks:
  agrizen-network:
    driver: bridge
